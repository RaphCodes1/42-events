"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin-page/page",{

/***/ "(app-pages-browser)/./src/data/mockEvents.ts":
/*!********************************!*\
  !*** ./src/data/mockEvents.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchEvents: function() { return /* binding */ fetchEvents; },\n/* harmony export */   insertInitialData: function() { return /* binding */ insertInitialData; },\n/* harmony export */   mockEvents: function() { return /* binding */ mockEvents; }\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=format!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/format.mjs\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _store_eventsStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/eventsStore */ \"(app-pages-browser)/./src/store/eventsStore.ts\");\n/* __next_internal_client_entry_do_not_use__ mockEvents,insertInitialData,fetchEvents auto */ \n\n\n// Helper to create dates relative to today\nconst getRelativeDate = (dayOffset)=>{\n    const date = new Date();\n    date.setDate(date.getDate() + dayOffset);\n    return (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_2__.format)(date, \"yyyy-MM-dd'T'HH:mm:ss\");\n};\n// Default mock data for development\nconst defaultMockEvents = [\n    {\n        id: \"1\",\n        title: \"Web Development Workshop\",\n        description: \"Learn the latest web development technologies and best practices.\",\n        date: getRelativeDate(2),\n        location: \"Tech Hub, Room 101\",\n        category: \"workshop\",\n        createdAt: getRelativeDate(-5)\n    },\n    {\n        id: \"2\",\n        title: \"AI Conference 2024\",\n        description: \"Annual conference on artificial intelligence and machine learning.\",\n        date: getRelativeDate(7),\n        location: \"Convention Center\",\n        category: \"conference\",\n        createdAt: getRelativeDate(-10)\n    },\n    {\n        id: \"3\",\n        title: \"Startup Meetup\",\n        description: \"Network with fellow entrepreneurs and investors.\",\n        date: getRelativeDate(3),\n        location: \"Innovation Space\",\n        category: \"meetup\",\n        createdAt: getRelativeDate(-3)\n    }\n];\nlet mockEvents = [\n    ...defaultMockEvents\n];\n// Function to insert initial data into the database\nconst insertInitialData = async ()=>{\n    console.log(\"Attempting to insert initial data...\");\n    try {\n        // First check if we already have data\n        const { data: existingData, error: checkError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"event_data\").select(\"id\").limit(1);\n        if (checkError) {\n            console.error(\"Error checking existing data:\", checkError);\n            return;\n        }\n        if (existingData && existingData.length > 0) {\n            console.log(\"Data already exists in database, skipping initial data insertion\");\n            return;\n        }\n        // Insert each mock event into the database\n        for (const event of defaultMockEvents){\n            const { error: insertError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"event_data\").insert({\n                title: event.title,\n                description: event.description,\n                date: event.date,\n                location: event.location,\n                category: event.category,\n                created_at: event.createdAt\n            });\n            if (insertError) {\n                console.error(\"Error inserting event:\", {\n                    event: event.title,\n                    error: insertError\n                });\n            } else {\n                console.log(\"Successfully inserted event:\", event.title);\n            }\n        }\n        console.log(\"Initial data insertion completed\");\n    } catch (error) {\n        console.error(\"Unexpected error during initial data insertion:\", error);\n    }\n};\nconst fetchEvents = async ()=>{\n    console.log(\"Starting fetchEvents...\");\n    try {\n        console.log(\"Attempting to fetch events from Supabase...\");\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"event_data\").select(\"*\");\n        if (error) {\n            console.error(\"Error fetching events from Supabase:\", {\n                error: error.message,\n                code: error.code,\n                details: error.details,\n                hint: error.hint\n            });\n            console.log(\"Falling back to mock data due to error\");\n            _store_eventsStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getState().setEvents(mockEvents);\n            return;\n        }\n        var _data_length;\n        console.log(\"Supabase response received:\", {\n            dataLength: (_data_length = data === null || data === void 0 ? void 0 : data.length) !== null && _data_length !== void 0 ? _data_length : 0,\n            hasData: !!data,\n            firstEvent: (data === null || data === void 0 ? void 0 : data[0]) ? {\n                id: data[0].id,\n                title: data[0].title,\n                date: data[0].date\n            } : null\n        });\n        if (data && data.length > 0) {\n            console.log(\"Processing fetched events...\");\n            const events = data.map((event)=>({\n                    id: String(event.id),\n                    title: event.title,\n                    description: event.description,\n                    date: String(event.date),\n                    location: event.location,\n                    category: event.category,\n                    createdAt: String(event.created_at)\n                }));\n            console.log(\"Events processed successfully:\", {\n                totalEvents: events.length,\n                categories: [\n                    ...new Set(events.map((e)=>e.category))\n                ],\n                dateRange: {\n                    earliest: events.reduce((a, b)=>new Date(a.date) < new Date(b.date) ? a : b).date,\n                    latest: events.reduce((a, b)=>new Date(a.date) > new Date(b.date) ? a : b).date\n                }\n            });\n            mockEvents = events;\n            _store_eventsStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getState().setEvents(events);\n            console.log(\"Events stored in state successfully\");\n        } else {\n            console.log(\"No events found in database, using mock data\");\n            _store_eventsStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getState().setEvents(mockEvents);\n        }\n    } catch (error) {\n        console.error(\"Unexpected error in fetchEvents:\", {\n            error: error instanceof Error ? error.message : \"Unknown error\",\n            stack: error instanceof Error ? error.stack : undefined\n        });\n        console.log(\"Falling back to mock data due to unexpected error\");\n        _store_eventsStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getState().setEvents(mockEvents);\n    }\n    console.log(\"fetchEvents completed\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/data/mockEvents.ts\n"));

/***/ })

});